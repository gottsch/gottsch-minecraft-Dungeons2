buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.ajoberstar:grgit:1.7.2'
    }
}

// include shadow
plugins {
  //  must use gradle v3.0+ for this version of shadow (2.0.1).  Update gradle-wrapper.properties
    id "com.github.johnrengelman.shadow" version "2.0.1"
}

apply plugin: 'net.minecraftforge.gradle.forge'

ext {
    // Open the Git repository in the parent directory.
    git = org.ajoberstar.grgit.Grgit.open(file('../'))

    // Get commit id of HEAD.
    revision = git.head().id
    // Alternative is using abbreviatedId of head() method.
    // revision = git.head().abbreviatedId
}

version = "mc${mc_version}-f${forge_version}-v${mod_version}"
group = "${package_group}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${mod_name}"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"

    if (project.hasProperty('mappings_version'))
        mappings = project.mappings_version
}

//Optional: change the project structure
sourceSets.main{
    java{
		srcDirs 'src' //, 'test' //set the source folder as the /src subfolder
	}
    resources{
		srcDirs 'src/resources'//set the resources folder as the /resources subfolder
	}
}

def gottschcore_path="../../gottsch-minecraft-GottschCore/GottschCore${mc_version}/build/libs/GottschCore-mc${mc_version}-f${forge_version}-v${gottschcore_version}.jar"
def engine_path="../../gottsch-minecraft-DungeonsEngine/DungeonsEngine-${mc_version}/build/libs/DungeonsEngine-mc${mc_version}-f${forge_version}-v${engine_version}.jar"
def triangulator_path="../../ModCommonLibs/libs/DelaunayTriangulator-1.0.3.jar"
def engine_path_source="../../gottsch-minecraft-DungeonsEngine/DungeonsEngine-${mc_version}"


dependencies {
	// compile files(engine_path)	// <-- include the DungeonsEngine.jar library

	compile files(triangulator_path)
	// compile and include the dungeons engine files
	//compile project(':engine')
	// use 'shadow' to include dependency in compile but to exclude for the shadow jar
	shadow files(engine_path)
	shadow files(gottschcore_path)	
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

shadowJar {
    // move everything under "io.github" (which in the DelaunayTriangulator lib) to "com.someguyssoftware.dungeons2.triangulation"
    relocate "io.github", "com.someguyssoftware.dungeons2.triangulation"
	// Replace the default JAR
    classifier '' 
    
    // exclude files in the META-INF
    // NOTE this isn't working.
    sourceSets {
        main {
            java {
                exclude '**/META-INF/**'
            }
        }
     }
     
     // add engine files from .jar (instead of using the shadow jar method, so that we can remove META-INF files)
     from (zipTree("../../gottsch-minecraft-DungeonsEngine/DungeonsEngine-${mc_version}/build/libs/DungeonsEngine-mc${mc_version}-f${forge_version}-v${engine_version}.jar")) {
		exclude '**/META-INF/**'
		exclude 'META-INF/**'
	}
}

reobf {
	// Reobfuscate the shadowed JAR
    shadowJar {} 
}


